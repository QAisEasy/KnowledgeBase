// –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UI
class QuizApp {
    constructor() {
        this.testId = new URLSearchParams(window.location.search).get('id');
        this.currentQuestion = 0;
        this.score = 0;
        this.correctAnswers = 0;
        this.answers = [];
        this.testData = null;
        this.selectedAnswer = null;
        this.isAnswered = false;
        this.startTime = Date.now();
        this.timerInterval = null;
        
        this.init();
    }

    async init() {
        try {
            const response = await fetch(`data/tests/${this.testId}.json`);
            this.testData = await response.json();
            this.showQuestion();
            this.startTimer();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–∞:', error);
            alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–∞');
            window.location.href = 'index.html';
        }
    }

    startTimer() {
        this.timerInterval = setInterval(() => {
            const elapsed = Math.floor((Date.now() - this.startTime) / 1000);
            const minutes = Math.floor(elapsed / 60).toString().padStart(2, '0');
            const seconds = (elapsed % 60).toString().padStart(2, '0');
            document.getElementById('timerText').textContent = `${minutes}:${seconds}`;
        }, 1000);
    }

    showQuestion() {
        const question = this.testData.questions[this.currentQuestion];
        const container = document.getElementById('questionContainer');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progress = ((this.currentQuestion + 1) / this.testData.questions.length) * 100;
        document.getElementById('progressBar').style.width = progress + '%';
        document.getElementById('progressText').textContent = 
            `–í–æ–ø—Ä–æ—Å ${this.currentQuestion + 1} –∏–∑ ${this.testData.questions.length}`;
        document.getElementById('scoreText').textContent = 
            `${this.correctAnswers} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        container.style.opacity = '0';
        setTimeout(() => {
            container.innerHTML = `
                <div class="question-number">–í–æ–ø—Ä–æ—Å ${this.currentQuestion + 1}</div>
                <div class="question">${question.question}</div>
                <div class="options">
                    ${question.options.map((option, index) => `
                        <div class="option" data-index="${index}" onclick="quiz.selectAnswer(${index})">
                            <strong>${String.fromCharCode(65 + index)}.</strong> ${option.text}
                        </div>
                    `).join('')}
                </div>
                <button class="btn btn-primary" id="checkBtn" onclick="quiz.checkAnswer()" disabled>
                    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç
                </button>
                <div id="explanationArea"></div>
            `;
            container.style.opacity = '1';
        }, 200);
        
        this.selectedAnswer = null;
        this.isAnswered = false;
    }

    selectAnswer(index) {
        if (this.isAnswered) return;
        
        // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
        document.querySelectorAll('.option').forEach(opt => {
            opt.classList.remove('selected');
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π
        document.querySelector(`[data-index="${index}"]`).classList.add('selected');
        this.selectedAnswer = index;
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        document.getElementById('checkBtn').disabled = false;
    }

    checkAnswer() {
        if (this.selectedAnswer === null || this.isAnswered) return;
        
        this.isAnswered = true;
        const question = this.testData.questions[this.currentQuestion];
        const correct = question.correctAnswer;
        const isCorrect = this.selectedAnswer === correct;
        
        if (isCorrect) {
            this.score++;
            this.correctAnswers++;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        document.getElementById('scoreText').textContent = 
            `${this.correctAnswers} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π/–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        document.querySelectorAll('.option').forEach((opt, index) => {
            opt.classList.add('disabled');
            if (index === correct) {
                opt.classList.add('correct');
            } else if (index === this.selectedAnswer && !isCorrect) {
                opt.classList.add('incorrect');
            }
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        const explanationArea = document.getElementById('explanationArea');
        const explanation = isCorrect ? 
            question.explanations[this.selectedAnswer].correct : 
            question.explanations[this.selectedAnswer].incorrect;
            
        explanationArea.innerHTML = `
            <div class="explanation ${isCorrect ? 'correct' : 'incorrect'}">
                <strong>${isCorrect ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!'}</strong>
                ${explanation}
            </div>
            <button class="btn btn-next" onclick="quiz.nextQuestion()">
                ${this.currentQuestion < this.testData.questions.length - 1 ? 
                    '–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å ‚Üí' : 
                    'üéØ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç'}
            </button>
        `;
        
        // –ü—Ä—è—á–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏
        document.getElementById('checkBtn').style.display = 'none';
    }

    nextQuestion() {
        this.currentQuestion++;
        
        if (this.currentQuestion < this.testData.questions.length) {
            this.showQuestion();
        } else {
            this.showResult();
        }
    }

    showResult() {
        clearInterval(this.timerInterval);
        
        const percentage = Math.round((this.score / this.testData.questions.length) * 100);
        let message = '';
        let icon = '';
        
        if (percentage === 100) {
            message = '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!';
            icon = 'üèÜ';
        } else if (percentage >= 80) {
            message = '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª.';
            icon = 'üéâ';
        } else if (percentage >= 60) {
            message = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å.';
            icon = 'üëç';
        } else {
            message = '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â–µ —Ä–∞–∑.';
            icon = 'üí™';
        }
        
        document.getElementById('questionContainer').style.display = 'none';
        document.getElementById('result').style.display = 'block';
        document.querySelector('.result-icon').textContent = icon;
        document.getElementById('scoreValue').textContent = this.score;
        document.getElementById('scoreTotal').textContent = `–∏–∑ ${this.testData.questions.length}`;
        document.getElementById('resultMessage').textContent = message;
    }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const quiz = new QuizApp();